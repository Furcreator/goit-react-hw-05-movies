{"version":3,"file":"static/js/415.b1149fb3.chunk.js","mappings":"kNA6BA,EA3ByB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACbC,EAAaC,EAIjB,OAHIJ,EAAMK,cACRF,EAAU,yCAAqCH,EAAMK,eAGrD,2BACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaP,EAAMQ,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,UACE,+BACE,gBAAKU,IAAKR,EAAYS,MAAK,OAAUC,OAAM,OAAUC,IAAI,gBAG5Dd,EAAMe,QACL,SAAC,EAAAC,QAAD,CAAST,GAAE,kBAAaP,EAAMQ,IAAMC,MAAO,CAAEC,KAAMT,GAAnD,UACE,0BAAOD,EAAMe,UAIhBf,EAAMiB,OACL,SAAC,EAAAD,QAAD,CAAST,GAAE,kBAAaP,EAAMQ,IAAMC,MAAO,CAAEC,KAAMT,GAAnD,UACE,0BAAOD,EAAMiB,WAKtB,ECfD,EAXqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,OACE,+BACE,wBACGA,EAAOC,KAAI,SAAAnB,GAAK,OACf,SAAC,EAAD,CAAiCA,MAAOA,GAAjBA,EAAMQ,GADd,OAMxB,C,oCCTD,IAHc,SAAC,GAAc,IAAZY,EAAW,EAAXA,KACf,OAAO,uBAAIA,GACZ,C,6FCwBD,UArBa,WACX,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAkBM,EAAKC,QACxB,IACAC,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,KAED,2BACE,+BACGA,IAAS,uBAAIA,KACd,SAAC,IAAD,CAAOJ,KAAK,oBACXE,IAAkB,SAAC,IAAD,CAAcJ,OAAQI,QAIhD,C,yLCzBKU,EAAU,mCACVC,EAAW,8BAEJN,EAAiB,mCAAG,6FACzBO,EADyB,UAChBD,EADgB,mCACmBD,EADnB,oBAERG,MAAMD,GAFE,cAEzBE,EAFyB,gBAGlBA,EAASC,OAHS,mFAAH,qDAMjBC,EAAY,mCAAG,WAAM9B,GAAN,gFACpB0B,EADoB,UACXD,EADW,mBACQzB,EADR,oBACsBwB,EADtB,oBAEHG,MAAMD,GAFH,cAEpBE,EAFoB,gBAGbA,EAASC,OAHI,mFAAH,sDAMZE,EAAc,mCAAG,WAAOC,EAAOC,GAAd,gFACtBP,EADsB,UACbD,EADa,gCACmBO,EADnB,oDACoEC,EADpE,oBACoFT,GADpF,SAELG,MAAMD,GAFD,cAEtBE,EAFsB,gBAGfA,EAASC,OAHM,mFAAH,wDAMdK,EAAc,mCAAG,WAAMlC,GAAN,gFACtB0B,EADsB,UACbD,EADa,mBACMzB,EADN,2CAC2CwB,GAD3C,SAELG,MAAMD,GAFD,cAEtBE,EAFsB,gBAGfA,EAASC,OAHM,mFAAH,sDAMdM,EAAiB,mCAAG,WAAMnC,GAAN,gFACvB0B,EADuB,UACdD,EADc,mBACKzB,EADL,2CAC0CwB,EAD1C,oBAEJG,MAAMD,GAFF,cAErBE,EAFqB,gBAGdA,EAASC,OAHK,mFAAH,qD","sources":["components/ListOfMoviesItem/ListOfMoviesItem.jsx","components/ListOfMovies/ListOfMovies.jsx","components/Title/Title.jsx","pages/Home.jsx","utils/api.js"],"sourcesContent":["import { Link, NavLink, useLocation } from 'react-router-dom';\nimport noPhoto from '../../images/noPhoto.png';\nconst ListOfMoviesItem = ({ movie }) => {\n  const location = useLocation();\n  let posterPath = noPhoto;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  }\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <>\n          <img src={posterPath} width={`50px`} height={`50px`} alt=\"preview\" />\n        </>\n      </Link>\n      {movie.title && (\n        <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.title}</span>\n        </NavLink>\n      )}\n      {/* якщо назва фільму в параметрі film.name */}\n      {movie.name && (\n        <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.name}</span>\n        </NavLink>\n      )}\n    </li>\n  );\n};\nexport default ListOfMoviesItem;\n","import ListOfMoviesItem from 'components/ListOfMoviesItem/ListOfMoviesItem';\n\nconst ListOfMovies = ({ movies }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <ListOfMoviesItem key={movie.id} movie={movie} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ListOfMovies;\n","const Title = ({ text }) => {\n  return <p>{text}</p>;\n};\nexport default Title;\n","import ListOfMovies from 'components/ListOfMovies/ListOfMovies';\nimport Title from 'components/Title/Title';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'utils/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(data => {\n        setTrendingMovies(data.results);\n      })\n      .catch(error => setError(error));\n  }, []);\n  return (\n    <main>\n      <section>\n        {error && <p>{error}</p>}\n        <Title text=\"Trending Movies\" />\n        {trendingMovies && <ListOfMovies movies={trendingMovies} />}\n      </section>\n    </main>\n  );\n};\nexport default Home;\n","const API_KEY = 'f8717161caaf1418c951ed37d4ef3a4b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nexport const getTrendingMovies = async () => {\n  const URL = `${BASE_URL}3/movie/popular?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getMovieById = async id => {\n  const URL = `${BASE_URL}3/movie/${id}?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getSearchMovie = async (value, page) => {\n  const URL = `${BASE_URL}3/search/movie?query=${value}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getCastOfMovie = async id => {\n  const URL = `${BASE_URL}3/movie/${id}/credits?language=en-US&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getReviewsOfMovie = async id => {\n    const URL = `${BASE_URL}3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}&page=1`;\n      const response = await fetch(URL);\n      return await response.json();\n}"],"names":["movie","location","useLocation","posterPath","noPhoto","poster_path","Link","to","id","state","from","src","width","height","alt","title","NavLink","name","movies","map","text","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","getTrendingMovies","then","data","results","catch","API_KEY","BASE_URL","URL","fetch","response","json","getMovieById","getSearchMovie","value","page","getCastOfMovie","getReviewsOfMovie"],"sourceRoot":""}