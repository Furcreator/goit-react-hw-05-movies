{"version":3,"file":"static/js/276.295ce8fc.chunk.js","mappings":"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","sources":["components/ListOfMoviesItem/ListOfMoviesItem.styled.jsx","components/ListOfMoviesItem/ListOfMoviesItem.jsx","components/ListOfMovies/ListOfMovies.jsx","components/ListOfMovies/ListOfMovies.styled.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/SearchingForm/SearchingForm.styled.jsx","components/SearchingForm/SearchingForm.jsx","pages/Movies.styled.jsx","pages/Movies.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\n// саме сюди імпортуємо NavLink, який потім стилізуємо\nimport { NavLink } from 'react-router-dom';\n\nexport const Li = styled.li`\n  /*----Базовий стиль для мобілки до 479 (респонсивний)----*/\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* gap: 20px; */\n\n  /*----Базовий стиль для мобілки 480-767 (адаптивний)----*/\n  @media screen and (min-width: 480px) {\n    max-width: 220px;\n  }\n\n  /*----Стиль для планшета 768-1200----*/\n\n  @media screen and (min-width: 768px) {\n    max-width: 177px;\n  }\n\n  /*----Стиль для компа від 1200----*/\n\n  @media screen and (min-width: 1200px) {\n    max-width: 226px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  height: 100%;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  overflow: hidden;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  cursor: pointer;\n\n  /*----Базовий стиль для мобілки 480-767 (адаптивний)----*/\n  @media screen and (min-width: 480px) {\n    max-width: 220px;\n    height: 330px;\n  }\n\n  /*----Стиль для планшета 768-1200----*/\n\n  @media screen and (min-width: 768px) {\n    max-width: 177px;\n    height: 265px;\n  }\n\n  /*----Стиль для компа від 1200----*/\n\n  @media screen and (min-width: 1200px) {\n    max-width: 226px;\n    height: 339px;\n  }\n`;\n\nexport const Img = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  transition: scale 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  display: block;\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  height: 100% !important;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n\n  height: auto;\n  text-decoration: none;\n  color: mediumvioletred;\n  padding: 9px 5px;\n  background: antiquewhite;\n  font-size: 16px;\n  font-weight: 500;\n\n  border: 2px dashed;\n\n  border-radius: 15px;\n\n  :hover {\n    background: darkmagenta;\n    color: aquamarine;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport noPhoto from '../../images/noPhoto.png';\nimport { Img, Li, StyledNavLink, Thumb } from './ListOfMoviesItem.styled';\nimport PropTypes from 'prop-types';\nconst ListOfMoviesItem = ({ movie }) => {\n  const location = useLocation();\n  let posterPath = noPhoto;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  }\n\n  return (\n    <Li>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <Thumb>\n          <Img src={posterPath} width={`50px`} height={`50px`} alt=\"preview\" />\n        </Thumb>\n      </Link>\n      {movie.title && (\n        <StyledNavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.title}</span>\n        </StyledNavLink>\n      )}\n      {/* якщо назва фільму в параметрі film.name */}\n      {movie.name && (\n        <StyledNavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.name}</span>\n        </StyledNavLink>\n      )}\n    </Li>\n  );\n};\nexport default ListOfMoviesItem;\nListOfMoviesItem.propType = {\n  movie: PropTypes.object.isRequired,\n};\n","import ListOfMoviesItem from 'components/ListOfMoviesItem/ListOfMoviesItem';\nimport { Ul } from './ListOfMovies.styled';\nimport PropTypes from 'prop-types';\nconst ListOfMovies = ({ movies }) => {\n  return (\n    <>\n      <Ul>\n        {movies.map(movie => (\n          <ListOfMoviesItem key={movie.id} movie={movie} />\n        ))}\n      </Ul>\n    </>\n  );\n};\nexport default ListOfMovies;\nListOfMovies.propType = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n  width: 100%;\n\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  /* @media screen and (min-width: 480px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 10px; */\n  /* } */\n`;\n","import styled from '@emotion/styled';\n\nexport const TitleText = styled.p`\n  font-size: 25px;\n  color: mediumvioletred;\n  margin: 0;\n  text-align: center;\n  font-weight: 700;\n`;\n","import { TitleText } from './Title.styled';\nimport PropTypes from 'prop-types';\nconst Title = ({ text }) => {\n  return <TitleText>{text}</TitleText>;\n};\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SearchContainer = styled.div`\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  margin: 10px 0;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 35px;\n  border-radius: 5px;\n  border: dashed;\n  color: mediumvioletred;\n  background-color: antiquewhite;\n  padding: 7px;\n  font-size: 15px;\n`;\n\nexport const Button = styled.button`\n  width: 40px;\n  border-radius: 10px;\n  border: dashed;\n  color: mediumvioletred;\n  background-color: antiquewhite;\n  height: 40px;\n  cursor: pointer;\n  :hover {\n    background: darkmagenta;\n    color: aquamarine;\n  }\n`;\n","import { useState } from 'react';\nimport { HiSearch } from 'react-icons/hi';\nimport { Button, Input, SearchContainer } from './SearchingForm.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchingForm = ({ onSubmitForm }) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleChange = e => {\n    setQuery(e.target.value);\n  };\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      setQuery('');\n      return;\n    }\n    onSubmitForm(query);\n    setQuery('');\n  };\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <SearchContainer>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={onHandleChange}\n        />\n        <Button type=\"submit\">\n          <HiSearch fontSize=\"15px\" />\n        </Button>\n      </SearchContainer>\n    </form>\n  );\n};\nexport default SearchingForm;\n\nSearchingForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const MoviesContainer = styled.div`\n  height: 100%;\n  background-color: darkseagreen;\n  padding: 30px;\n`;\n\nexport const SearchImg = styled.img`\n  width: 700px;\n  height: 500px;\n  overflow: hidden;\n  border-radius: 10px;\n  display: block;\n  margin: 0 auto;\n`;\n","import ListOfMovies from 'components/ListOfMovies/ListOfMovies';\nimport SearchingForm from 'components/SearchingForm/SearchingForm';\nimport Title from 'components/Title/Title';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'utils/api';\nimport { MoviesContainer, SearchImg } from './Movies.styled';\nimport searchGif from '../images/search.gif';\n\nconst Movie = () => {\n  const [listMovies, setListMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [page] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      getSearchMovie(query, page)\n        .then(data => {\n          if (data.results.length === 0) {\n            setSearchParams('');\n            return;\n          }\n          setListMovies(data.results);\n        })\n        .catch(error => setError(error));\n    }\n  }, [query, page, setSearchParams]);\n\n  const onSubmitForm = result => {\n    setSearchParams({ query: result });\n  };\n\n  return (\n    <section>\n      <MoviesContainer>\n        <Title text={'Search Movie'} />\n        {error && <p>{error}</p>}\n        <SearchingForm onSubmitForm={onSubmitForm} />\n        {!listMovies && <SearchImg src={searchGif} alt=\"as\" />}\n        {listMovies && <ListOfMovies movies={listMovies} />}\n      </MoviesContainer>\n    </section>\n  );\n};\nexport default Movie;\n","const API_KEY = 'f8717161caaf1418c951ed37d4ef3a4b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nexport const getTrendingMovies = async () => {\n  const URL = `${BASE_URL}3/movie/popular?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getMovieById = async id => {\n  const URL = `${BASE_URL}3/movie/${id}?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getSearchMovie = async (value, page) => {\n  const URL = `${BASE_URL}3/search/movie?query=${value}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getCastOfMovie = async id => {\n  const URL = `${BASE_URL}3/movie/${id}/credits?language=en-US&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getReviewsOfMovie = async id => {\n    const URL = `${BASE_URL}3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}&page=1`;\n      const response = await fetch(URL);\n      return await response.json();\n}"],"names":["Li","styled","Thumb","Img","StyledNavLink","NavLink","ListOfMoviesItem","movie","location","useLocation","posterPath","noPhoto","poster_path","Link","to","id","state","from","src","width","height","alt","title","name","propType","PropTypes","ListOfMovies","movies","Ul","map","TitleText","text","SearchContainer","Input","Button","onSubmitForm","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","target","fontSize","MoviesContainer","SearchImg","listMovies","setListMovies","error","setError","page","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovie","then","data","results","length","catch","Title","result","searchGif","API_KEY","BASE_URL","getTrendingMovies","URL","fetch","response","json","getMovieById","getCastOfMovie","getReviewsOfMovie"],"sourceRoot":""}