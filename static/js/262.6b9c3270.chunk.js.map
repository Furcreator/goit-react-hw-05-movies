{"version":3,"file":"static/js/262.6b9c3270.chunk.js","mappings":"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","sources":["components/ListOfMoviesItem/ListOfMoviesItem.jsx","components/ListOfMovies/ListOfMovies.jsx","components/Title/Title.jsx","components/SearchingForm/SearchingForm.jsx","pages/Movies.jsx","utils/api.js"],"sourcesContent":["import { Link, NavLink, useLocation } from 'react-router-dom';\nimport noPhoto from '../../images/noPhoto.png';\nconst ListOfMoviesItem = ({ movie }) => {\n  const location = useLocation();\n  let posterPath = noPhoto;\n  if (movie.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  }\n  return (\n    <li>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <>\n          <img src={posterPath} width={`50px`} height={`50px`} alt=\"preview\" />\n        </>\n      </Link>\n      {movie.title && (\n        <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.title}</span>\n        </NavLink>\n      )}\n      {/* якщо назва фільму в параметрі film.name */}\n      {movie.name && (\n        <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <span>{movie.name}</span>\n        </NavLink>\n      )}\n    </li>\n  );\n};\nexport default ListOfMoviesItem;\n","import ListOfMoviesItem from 'components/ListOfMoviesItem/ListOfMoviesItem';\n\nconst ListOfMovies = ({ movies }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <ListOfMoviesItem key={movie.id} movie={movie} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ListOfMovies;\n","const Title = ({ text }) => {\n  return <p>{text}</p>;\n};\nexport default Title;\n","import { useState } from 'react';\n\nconst SearchingForm = ({ onSubmitForm }) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleChange = e => {\n    setQuery(e.target.value);\n  };\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      setQuery('');\n      return;\n    }\n    onSubmitForm(query);\n    setQuery('');\n  };\n  return (\n    <form onSubmit={onHandleSubmit}>\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={onHandleChange}\n      />\n    </form>\n  );\n};\nexport default SearchingForm;\n","import ListOfMovies from 'components/ListOfMovies/ListOfMovies';\nimport SearchingForm from 'components/SearchingForm/SearchingForm';\nimport Title from 'components/Title/Title';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'utils/api';\n\nconst Movie = () => {\n  const [listMovies, setListMovies] = useState(null);\n  const [page] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      getSearchMovie(query, page).then(data => {\n        if (data.results.length === 0) {\n          setSearchParams('');\n          return;\n        }\n        setListMovies(data.results);\n      });\n    }\n  }, [query, page, setSearchParams]);\n\n  const onSubmitForm = result => {\n    setSearchParams({ query: result });\n  };\n\n  return (\n    <main>\n      <section>\n        <Title text={'Search Movie'} />\n        <SearchingForm onSubmitForm={onSubmitForm} />\n        {listMovies && <ListOfMovies movies={listMovies} />}\n      </section>\n    </main>\n  );\n};\nexport default Movie;\n","const API_KEY = 'f8717161caaf1418c951ed37d4ef3a4b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nexport const getTrendingMovies = async () => {\n  const URL = `${BASE_URL}3/movie/popular?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getMovieById = async id => {\n  const URL = `${BASE_URL}3/movie/${id}?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getSearchMovie = async (value, page) => {\n  const URL = `${BASE_URL}3/search/movie?query=${value}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getCastOfMovie = async id => {\n  const URL = `${BASE_URL}3/movie/${id}/credits?language=en-US&api_key=${API_KEY}`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getReviewsOfMovie = async id => {\n    const URL = `${BASE_URL}3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}&page=1`;\n      const response = await fetch(URL);\n      return await response.json();\n}"],"names":["movie","location","useLocation","posterPath","noPhoto","poster_path","Link","to","id","state","from","src","width","height","alt","title","NavLink","name","movies","map","text","onSubmitForm","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","target","listMovies","setListMovies","page","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovie","then","data","results","length","Title","result","ListOfMovies","API_KEY","BASE_URL","getTrendingMovies","URL","fetch","response","json","getMovieById","getCastOfMovie","getReviewsOfMovie"],"sourceRoot":""}